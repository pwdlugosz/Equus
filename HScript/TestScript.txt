
/* HORSE AGGREGAGTE QA TESTING:
	-- CREATE A TABLE WITH THREE KEYS AND THREE KEYS TO AGGREGATGE
	-- TEST EVERY POSSIBLE AGGREGATE FUNCTION

*/

// CREATE A TABLE //
CREATE TABLE TEMP.AGG_TEST_S1
(
	KEY AS INT,
	VALUE AS INT

);
CHUNK SIZE 100000;
%;

// LOAD THE TABLE WITH TEST DATA //
DECLARE; 
	TICKER AS INT = 0; 
%;

FOR TICKER = 0 TO 999999;
BEGIN;
	RETURN
		TICKER % 10 AS KEY,
		(TICKER % 2 == 0 ? @@NULL_INT : RANDINT() % 1000) AS VALUE
	INTO TEMP.AGG_TEST_S1;

END;
%;

/*

	TEST AN AGGREGATE BEFORE WE DELETE

*/

AGGREGATE TEMP.AGG_TEST_S1;
BY KEY % 25;
OVER

	COUNT(VALUE) AS COUNT_OF,
	COUNT_NULL(VALUE) AS COUNT_NULL_OF,
	COUNT_ALL(VALUE) AS COUNT_ALL_OF
;
RETURN TABLE.* INTO TEMP.AGG_TEST_S2;
%;

EXEC SYS_PRINT_TABLE; @TABLE = DATA TEMP.AGG_TEST_S2; %;

/*

	UPDATE WHERE VALUE IS NULL

*/
UPDATE TEMP.AGG_TEST_S1;
WHERE VALUE IS NULL;
SET VALUE = (KEY % 10 ? @@NULL_DOUBLE : 1D);

%;


/*

	TEST AN AGGREGATE AFTER WE DELETE

*/

AGGREGATE TEMP.AGG_TEST_S1;
BY KEY;
OVER

	COUNT(VALUE) AS COUNT_OF,
	COUNT_NULL(VALUE) AS COUNT_NULL_OF,
	COUNT_ALL(VALUE) AS COUNT_ALL_OF
;
RETURN TABLE.* INTO TEMP.AGG_TEST_S2;
%;

EXEC SYS_PRINT_TABLE; @TABLE = DATA TEMP.AGG_TEST_S2; %;


